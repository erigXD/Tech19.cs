// 1
using System.Numerics;

int NWD(int a, int b)
{
    while (a != b)
    {
        if (a > b) a -= b;
        if (b > a) b -= a;
    }
    return a;
}

int NWW(int a, int b)
{
    return a * b / NWD(a, b);
}

/*int x = int.Parse(Console.ReadLine());
int y = int.Parse(Console.ReadLine());*/

// Brute Force
/*
for (int i = 1; i < 100; i++)
{
    for (int j = 1; j < 100; j++)
    {
        if (NWD(i, j) == x && NWW(i, j) == y)
        {
            Console.WriteLine(i + " " + j);
        }
    }
}*/

// Iloczyn nwd*nww

/*int iloczyn = x * y;

for (int i = 1; i <= iloczyn; i++)
{
    if (iloczyn % i == 0 && NWD(i, iloczyn/i) == x && NWW(i, iloczyn/i) == y)
    {
        Console.WriteLine(i + " " + iloczyn/i);
    }
}*/

// 2
/*string pier = Console.ReadLine();
string drug = Console.ReadLine();
string[] P = pier.Split("/");
string[] D = drug.Split("/");

int a = int.Parse(P[0]);
int b = int.Parse(P[1]);
int c = int.Parse(D[0]);
int d = int.Parse(D[1]);

int mianownik = NWW(b, d);
int licz1 = mianownik * a / b;
int licz2 = mianownik * c / d;

if (licz1 + licz2 > mianownik)
{
    Console.WriteLine("tak");
}
else
{
    Console.WriteLine("nie");
}*/

// 4
/*char[] Samogloski = { 'a', 'e', 'i', 'o', 'u', 'y' };
string napis = Console.ReadLine();

int ilosc = 0;

for (int i = 0; i < napis.Length; i++)
{
    if (Samogloski.Contains(napis[i]))
    {
        ilosc++;
    }
    else
    {
        ilosc--;
    }
}

if (ilosc > 0)
{
    Console.WriteLine("Więcej samogłosek");
}
else
{
    Console.WriteLine("Więcej Spółgłosek");
}*/

// 10

int a = int.Parse(Console.ReadLine());
int b = int.Parse(Console.ReadLine());
int c = int.Parse(Console.ReadLine());

int m = int.Parse(Console.ReadLine());
int maks = 0;

if (a > b && a > c)
{
    maks = a;
}
if (b > a && b > c)
{
    maks = b;
}
if (c > a && c > b)
{
    maks = c;
}
int k = maks + m;

Console.WriteLine("Maksymalna wartość k = " + k);

int d = a + b + c;


/*while (m > 0 || a!=b)
{
    if (a < b && a < c)
    {
        a += 1;
        m -= 1;
        Console.WriteLine("m = " + m);
    }
    if (b < a && b < c)
    {
        b += 1;
        m -= 1;
        Console.WriteLine("m = " + m);
    }
    if (c < a && c < b)
    {
        c += 1;
        m -= 1;
        Console.WriteLine("m = " + m);
    }
}*/

/*int w1 = 30;
int w2 = 40;
int odl = 50;

for (int i = 0; i <= odl; i++)
{
    if (w1 * w1 + i * i == w2 * w2 + (odl - i) * (odl - i))
    {
        if (i > odl / 2) Console.WriteLine(i);
        else Console.WriteLine(odl - i);
    }
}*/

/*1.Napisz program, który pomnoży dwie macierze losowych liczb. 
Niech user podający wymiary macierzy zadba o odpowiednie wymiary,
tak aby mnożenie było możliwe. Macierze wypełnij losowymi liczbami.

2. Napisz algorytm, który sprawdzi czy gdzieś w macierzy 10x10 losowych liczb dwucyfrowych
doszło do sytuacji, że obok siebie są dwie liczby pierwsze.

3. Napisz program, który sprawdzi, czy dwa słowa wpisane przez usera są anagramami

4. Napisz program, który znajdzie w podanej n-elementowej tablicy najdłuższy spójny podciąg niemalejący
oraz obliczy jego długość i sumę jego elementów

5. Wygeneruj macierz n x n z losowymi cyframi. Znajdź sumę tych elementów tej macierzy,
które należą do którejkolwiek osi symetrii.*/

// 1
int x1 = int.Parse(Console.ReadLine());
int y1 = int.Parse(Console.ReadLine());

int x2 = int.Parse(Console.ReadLine());
int y2 = int.Parse(Console.ReadLine());

int[,] M1 = new int[x1, y1];
int[,] M2 = new int[x2, y2];

Random r = new Random();

for (int i = 0; i < x1; i++)
{
    for (int j = 0; j < y1; j++)
    {
        M1[i, j] = r.Next(1, 10);
    }
}

for (int i = 0; i < x2; i++)
{
    for (int j = 0; j < y2; j++)
    {
        M2[i, j] = r.Next(1, 10);
    }
}

int suma = 0;
int l = 0;
for (int i = 0; i < x1; i++)
{
    suma += M1[i, l] * M2[l, i];
}
